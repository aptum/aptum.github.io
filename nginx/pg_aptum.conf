server {
	listen 176.58.111.215:88;
	server_name agivdata.grbosm.site;
#listen [::]:80 default_server ipv6only=off;

    	index index.php;

	client_max_body_size 4M;
	client_body_buffer_size 128k;

	sendfile on;
	keepalive_timeout 30;
	charset utf-8;
	types_hash_max_size 2048;

	root /var/www/aptum/aptum;

	access_log  /var/log/nginx/pg_aptum.log my_combined;
	error_log  /var/log/nginx/pg_aptum.error.log;

	location /.well-known/ {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		proxy_pass http://lets.byteless.net;
		proxy_redirect http://lets.byteless.net http://$host/;
	}


    location ~ \.php$ {
		if ($http_origin ~* "^https?://(.*\.bitless\.be|grb\.app|.*\.grbosm\.site|grbosm\.site|.*\.osm\.be)$") {
			set $cors "1";
		}

# OPTIONS indicates a CORS pre-flight request
		if ($request_method = 'OPTIONS') {
			set $cors "${cors}o";
		}

# Append CORS headers to any request from 
# allowed CORS domain, except OPTIONS
		if ($cors = "1") {
#add_header "Access-Control-Allow-Origin" $http_origin;
#add_header "Access-Control-Allow-Credentials" true;
			more_set_headers 'Access-Control-Allow-Origin: $http_origin';
			more_set_headers 'Access-Control-Allow-Credentials: true';
		}

# OPTIONS (pre-flight) request from allowed

# CORS domain. return response directly
		if ($cors = "1o") {
			more_set_headers 'Access-Control-Allow-Origin: $http_origin';
			more_set_headers 'Access-Control-Allow-Methods: GET, POST, OPTIONS, PUT, DELETE';
			more_set_headers 'Access-Control-Allow-Credentials: true';
			more_set_headers 'Access-Control-Allow-Headers: $http_access_control_request_headers';

#more_set_headers 'Access-Control-Allow-Headers: Origin,Content-Type,Accept';
#set $cors_method $http_access_control_request_method;
			add_header Access-Control-Expose-Headers "Authorization";
# Valid for 2 days
			add_header Access-Control-Max-Age 172800;

			add_header Content-Length 0;
			add_header Content-Type text/plain;

			return 204;
		}

        include fastcgi_params;
        #try_files $uri $uri/ /index.php;
        fastcgi_index index.php;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME /index.php;
    }


	location / {
		try_files $uri /index.php?$query_string;
	}
}
